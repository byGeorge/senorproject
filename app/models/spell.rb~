class Spell < ActiveRecord::Base
	#picks a random spell at a particular level from the spell list
	def self.pick_spell(level, list, c_class)
		#if the classes have a spell list
		if (c_class == "Bard")
		temp = Spell.all.sample
			if list == nil
				temp =  Spell.all.sample until (temp.cclass.to_s.include?(c_class) && temp.level == level)
			else
				temp =  Spell.all.sample until (!list.include?(temp) && temp.cclass.to_s.include?(c_class) && temp.level == level)
			end
		list.push(temp)
		#for the classes that know all the spells
		elsif (c_class == "Cleric" || "Druid")
			if (level == 0)
				temp = Spell.all.sample
				if list == nil
					list.push(temp)
				else
					temp =  Spell.all.sample until (temp.cclass.to_s.include?(c_class) && temp.level == 0)
					list.push(temp)
				end
			else
				slist = Spell.all
				slist.each do |spell|
					list.push(spell) if (spell.cclass.to_s.include?(c_class) && spell.level == level)
				end
			end
		end #end if c_class
	end #end pick_spell

	#every character level increases spell ability.
	#this method will choose spells from a list, and increase 
	#spell capacity
	def self.level_spells(lvl)
		if @c_class.name == "Bard"
			#some increases in level mean the Bard gets to learn more spells
			@spells_known += 1 if lvl < 10 || lvl == 11 || lvl == 13 || lvl == 15 || lvl == 17
			@spells_known += 2 if lvl == 10 || lvl == 14 || lvl == 18
			if lvl == 2
				#add to the number of spells cast per day
				@spells[1] += 1
				#and pick a spell from the list (because @spells_known increased)
				Spell.pick_spell(1, @spells_list, "Bard")
			elsif lvl == 3
				@spells[1] += 1
				@spells[2] += 2
				Spell.pick_spell(2, @spells_list, "Bard")
			elsif lvl == 4
				@spells[0] += 1
				@spells[2] += 1
				Spell.pick_spell(rand(1..2), @spells_list, "Bard")
				Spell.pick_spell(0, @spells_list, "Bard")
			elsif lvl == 5
				@spells[3] += 2
				Spell.pick_spell(3, @spells_list, "Bard")
			elsif lvl == 6
				@spells[3] += 1
				Spell.pick_spell(rand(1..3), @spells_list, "Bard")
			elsif lvl == 7
				@spells[4] += 1
				Spell.pick_spell(4, @spells_list, "Bard")
			elsif lvl == 8
				@spells[4] += 1
				Spell.pick_spell(rand(1..4), @spells_list, "Bard")
			elsif lvl == 9
				@spells[4] += 1
				@spells[5] += 1
				Spell.pick_spell(5, @spells_list, "Bard")
			elsif lvl == 10
				@spells[0] += 1
				@spells[5] += 1
				Spell.pick_spell(0, @spells_list, "Bard")
				Spell.pick_spell(rand(1..5), @spells_list, "Bard")
				Spell.pick_spell(rand(1..5), @spells_list, "Bard")
			elsif lvl == 11
				@spells[6] += 1
				Spell.pick_spell(6, @spells_list, "Bard")
			elsif lvl == 12
				
			elsif lvl == 13
				@spells[7] += 1
				Spell.pick_spell(7, @spells_list, "Bard")
			elsif lvl == 14
				Spell.pick_spell(rand(1..7), @spells_list, "Bard")
				Spell.pick_spell(rand(1..7), @spells_list, "Bard")
			elsif lvl == 15
				@spells[8] += 1
				Spell.pick_spell(8, @spells_list, "Bard")
			elsif lvl == 16

			elsif lvl == 17
				@spells[9] += 1
				Spell.pick_spell(9, @spells_list, "Bard")
			elsif lvl == 18
				@spells[5] += 1
				Spell.pick_spell(rand(1..9), @spells_list, "Bard")
				Spell.pick_spell(rand(1..9), @spells_list, "Bard")
			elsif lvl == 19
				@spells[6] += 1
			elsif lvl == 20
				@spells[7] += 1
			end # end if level
		elsif @c_class.name == "Cleric"
			#clerics know all of the spells available to their class
			if lvl == 2
				#add to the number of spells cast per day
				@spells[1] += 1
			elsif lvl == 3
				@spells[1] += 1
				@spells[2] += 2
				#cleric now has access to lvl 2 spells
				Spell.pick_spell(2, @spells_list, "Cleric")
			elsif lvl == 4
				@spells[0] += 1
				@spells[2] += 1
				Spell.pick_spell(0, @spells_list, "Cleric")
			elsif lvl == 5
				@spells[3] += 2
				Spell.pick_spell(3, @spells_list, "Cleric")
			elsif lvl == 6
				@spells[3] += 1
			elsif lvl == 7
				@spells[4] += 1
				Spell.pick_spell(4, @spells_list, "Cleric")
			elsif lvl == 8
				@spells[4] += 1
			elsif lvl == 9
				@spells[4] += 1
				@spells[5] += 1
				Spell.pick_spell(5, @spells_list, "Cleric")
			elsif lvl == 10
				@spells[0] += 1
				@spells[5] += 1
				Spell.pick_spell(0, @spells_list, "Cleric")
			elsif lvl == 11
				@spells[6] += 1
				Spell.pick_spell(6, @spells_list, "Cleric")
			elsif lvl == 12
				
			elsif lvl == 13
				@spells[7] += 1
				Spell.pick_spell(7, @spells_list, "Cleric")
			elsif lvl == 14

			elsif lvl == 15
				@spells[8] += 1
				Spell.pick_spell(8, @spells_list, "Cleric")
			elsif lvl == 16

			elsif lvl == 17
				@spells[9] += 1
				Spell.pick_spell(9, @spells_list, "Cleric")
			elsif lvl == 18
				@spells[5] += 1
			elsif lvl == 19
				@spells[6] += 1
			elsif lvl == 20
				@spells[7] += 1
			end # end if level
		elsif @c_class.name == "Druid"
			#clerics know all of the spells available to their class
			if lvl == 2
				#add to the number of spells cast per day
				@spells[1] += 1
			elsif lvl == 3
				@spells[1] += 1
				@spells[2] += 2
				#Druid now has access to lvl 2 spells
				Spell.pick_spell(2, @spells_list, "Druid")
			elsif lvl == 4
				@spells[0] += 1
				@spells[2] += 1
				Spell.pick_spell(0, @spells_list, "Druid")
			elsif lvl == 5
				@spells[3] += 2
				Spell.pick_spell(3, @spells_list, "Druid")
			elsif lvl == 6
				@spells[3] += 1
			elsif lvl == 7
				@spells[4] += 1
				Spell.pick_spell(4, @spells_list, "Druid")
			elsif lvl == 8
				@spells[4] += 1
			elsif lvl == 9
				@spells[4] += 1
				@spells[5] += 1
				Spell.pick_spell(5, @spells_list, "Druid")
			elsif lvl == 10
				@spells[0] += 1
				@spells[5] += 1
				Spell.pick_spell(0, @spells_list, "Druid")
			elsif lvl == 11
				@spells[6] += 1
				Spell.pick_spell(6, @spells_list, "Druid")
			elsif lvl == 12
				
			elsif lvl == 13
				@spells[7] += 1
				Spell.pick_spell(7, @spells_list, "Druid")
			elsif lvl == 14

			elsif lvl == 15
				@spells[8] += 1
				Spell.pick_spell(8, @spells_list, "Druid")
			elsif lvl == 16

			elsif lvl == 17
				@spells[9] += 1
				Spell.pick_spell(9, @spells_list, "Druid")
			elsif lvl == 18
				@spells[5] += 1
			elsif lvl == 19
				@spells[6] += 1
			elsif lvl == 20
				@spells[7] += 1
			end # end if level
		end # end if class
	end #end level spells
end
